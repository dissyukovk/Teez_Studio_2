# dynamic_stats_sender.py
import requests
from datetime import datetime, date
from telebot import TeleBot
import logging
from .botconfig import BACKEND_URL, TELEGRAM_TOKEN
from .photographers import fetch_priority_strequests_data, format_priority_strequests_message

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = TeleBot(TELEGRAM_TOKEN)

#—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞–º
def send_photographers_dynamic_stats():
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞ –ø–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å —Å —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ photographers_statistic,
    —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ä–∞–∑–Ω–∏—Ü—ã –¥–Ω–µ–π –æ—Ç –±–∞–∑–æ–≤–æ–π –¥–∞—Ç—ã.
    """
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É –∏ –Ω–∞—á–∞–ª–æ –º–µ—Å—è—Ü–∞
    today = datetime.now().date()
    first_day_of_month = today.replace(day=1)
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥–≥
    start_date_str = first_day_of_month.strftime('%d.%m.%Y')
    today_str = today.strftime('%d.%m.%Y')
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç—É
    endpoint_url = f"{BACKEND_URL}/mn/photographers_statistic/"
    params = {
        "date_from": start_date_str,
        "date_to": today_str,
    }
    
    try:
        response = requests.get(endpoint_url, params=params)
        response.raise_for_status()
        data = response.json()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        return
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –æ–±—â–∏–π –∏—Ç–æ–≥
    today_stats = data.get(today_str, {})
    total_stats = data.get("Total", {})
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message_lines = []
    message_lines.append("–°–Ω—è—Ç–æ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:")
    if today_stats:
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        for photographer, count in sorted(today_stats.items(), key=lambda x: x[1], reverse=True):
            message_lines.append(f"{photographer} - {count}")
    else:
        message_lines.append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è")
    
    message_lines.append("\n–ò—Ç–æ–≥–æ —Å –Ω–∞—á–∞–ª–∞ –º–µ—Å—è—Ü–∞:")
    if total_stats:
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        for photographer, count in sorted(total_stats.items(), key=lambda x: x[1], reverse=True):
            message_lines.append(f"{photographer} - {count}")
    else:
        message_lines.append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥–∞")
    
    message_text = "\n".join(message_lines)
    
    # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –¥–Ω–µ–π –º–µ–∂–¥—É —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–º –¥–Ω—ë–º –∏ –±–∞–∑–æ–≤–æ–π –¥–∞—Ç–æ–π 11.03.2025
    base_date = datetime.strptime("10.03.2025", "%d.%m.%Y").date()
    days_diff = (today - base_date).days
    mod = days_diff % 4
    remainder_fraction = mod / 4.0
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á–∞—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if remainder_fraction in [0.0, 0.25]:
        target_chat = "-1002397911962"
    elif remainder_fraction in [0.5, 0.75]:
        target_chat = "-1002347741124"
    else:
        target_chat = "1788046722"  # –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        bot.send_message(target_chat, message_text, parse_mode="Markdown")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {target_chat}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

def get_queue_stats_message():
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –æ—á–µ—Ä–µ–¥–µ–π –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏.
    """
    # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ URL —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤–∞—à —ç–Ω–¥–ø–æ–∏–Ω—Ç get_current_queues
    api_url = f"{BACKEND_URL}/mn/queues/" # –ü–æ–ª–Ω—ã–π URL —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
    try:
        response = requests.get(api_url)
        response.raise_for_status() # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏ HTTP (4xx, 5xx)
        data = response.json()
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –æ—á–µ—Ä–µ–¥–µ–π ({api_url}): {e}")
        return None
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä, JSONDecodeError
        print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç {api_url}: {e}")
        return None

    # --- –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ—Ç–≤–µ—Ç–∞ ---
    created = data.get("created_orders", {})
    assembly = data.get("assembly_orders", {})
    shooting = data.get("shooting_requests", {})
    retouch = data.get("retouch_queue", {})
    photo_check = data.get("photo_check_queue", {})
    retouch_check = data.get("retouch_check_queue", {})
    render_q = data.get("render_queue", {})
    render_upload = data.get("render_upload_queue", {})
    fs_upload = data.get("fs_photo_upload_queue", {})
    # ---> –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–π –æ—á–µ—Ä–µ–¥–∏
    real_shooting = data.get("real_shooting_queue", {})

    # –ü–æ–ª—É—á–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏, –∏—Å–ø–æ–ª—å–∑—É—è .get —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º 0
    created_orders_count = created.get("orders_count", 0)
    created_products_count = created.get("products_count", 0)

    assembly_orders_count = assembly.get("orders_count", 0)
    assembly_products_count = assembly.get("products_count", 0)

    shooting_requests_count = shooting.get("requests_count", 0)
    shooting_products_count = shooting.get("products_count", 0)

    retouch_count = retouch.get("count", 0)

    photo_check_requests_count = photo_check.get("requests_count", 0)
    photo_check_products_count = photo_check.get("products_count", 0)

    retouch_check_requests_count = retouch_check.get("requests_count", 0)
    retouch_check_products_count = retouch_check.get("products_count", 0)

    render_queue_count = render_q.get("count", 0)
    render_upload_queue_count = render_upload.get("count", 0)
    fs_photo_upload_queue_count = fs_upload.get("count", 0)
    # ---> –ü–æ–ª—É—á–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –¥–ª—è –Ω–æ–≤–æ–π –æ—á–µ—Ä–µ–¥–∏
    real_shooting_count = real_shooting.get("count", 0)


    # --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–ª–æ–Ω–µ–Ω–∏–π ---
    def prepositional_form(count, singular, plural):
        """
        –î–ª—è —á–∏—Å–µ–ª, –æ–∫–∞–Ω—á–∏–≤–∞—é—â–∏—Ö—Å—è –Ω–∞ 1 (–Ω–æ –Ω–µ 11) –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º—É singular,
        –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö ‚Äì —Ñ–æ—Ä–º—É plural.
        """
        # –î–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ None –∏–ª–∏ –Ω–µ—á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if not isinstance(count, (int, float)):
            return plural # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∫–ª–æ–Ω–µ–Ω–∏—è
        if count % 10 == 1 and count % 100 != 11:
            return singular
        else:
            return plural

    # --- –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ---
    # –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –¥–ª—è "–†–µ–∞–ª—å–Ω–∞—è –æ—á–µ—Ä–µ–¥—å –Ω–∞ —Å—ä–µ–º–∫—É"
    # –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —ç–º–æ–¥–∑–∏, –µ—Å–ª–∏ üîÅ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, üì∏ –∏–ª–∏ üîÑ)
    message = (
        "–¢–µ–∫—É—â–∏–µ –æ—á–µ—Ä–µ–¥–∏:\n\n"
        f"üì© *–°–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã:* {created_products_count} SKU –≤ {created_orders_count} {prepositional_form(created_orders_count, '–∑–∞–∫–∞–∑–µ', '–∑–∞–∫–∞–∑–∞—Ö')}\n\n"
        f"üì¶ *–ù–∞ —Å–±–æ—Ä–∫–µ:* {assembly_products_count} SKU –≤ {assembly_orders_count} {prepositional_form(assembly_orders_count, '–∑–∞–∫–∞–∑–µ', '–∑–∞–∫–∞–∑–∞—Ö')}\n\n"
        f"üì∏ *–û—á–µ—Ä–µ–¥—å –Ω–∞ —Å—ä–µ–º–∫—É –Ω–∞ —Ñ—Å:* {shooting_products_count} SKU –≤ {shooting_requests_count} {prepositional_form(shooting_requests_count, '–∑–∞—è–≤–∫–µ', '–∑–∞—è–≤–∫–∞—Ö')}\n\n"
        f"ü§î *–û—á–µ—Ä–µ–¥—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —Ñ–æ—Ç–æ:* {photo_check_products_count} SKU –≤ {photo_check_requests_count} {prepositional_form(photo_check_requests_count, '–∑–∞—è–≤–∫–µ', '–∑–∞—è–≤–∫–∞—Ö')}\n\n"
        f"üñå *–û—á–µ—Ä–µ–¥—å –Ω–∞ —Ä–µ—Ç—É—à—å:* {retouch_count} SKU\n\n"
        f"üëÄ *–û—á–µ—Ä–µ–¥—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–µ—Ç—É—à–∏:* {retouch_check_products_count} SKU –≤ {retouch_check_requests_count} {prepositional_form(retouch_check_requests_count, '–∑–∞—è–≤–∫–µ', '–∑–∞—è–≤–∫–∞—Ö')}\n\n"
        f"üñº *–û—á–µ—Ä–µ–¥—å –Ω–∞ —Ä–µ–Ω–¥–µ—Ä:* {render_queue_count} SKU\n\n"
        f"üì§ *–û—á–µ—Ä–µ–¥—å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ –æ—Ç –§–°:* {fs_photo_upload_queue_count} SKU\n\n"
        f"‚¨ÜÔ∏è *–û—á–µ—Ä–µ–¥—å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ä–µ–Ω–¥–µ—Ä–æ–≤:* {render_upload_queue_count} SKU\n\n"
        f"üì∏ *–†–µ–∞–ª—å–Ω–∞—è –æ—á–µ—Ä–µ–¥—å –Ω–∞ —Å—ä–µ–º–∫—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö:* {real_shooting_count} SKU"
    )
    return message

def send_queue_stats(chat_id, topic=None):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –æ—á–µ—Ä–µ–¥–µ–π –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∑–∞–ø—Ä–æ—Å /queue.
    
    –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä topic –∑–∞–¥–∞–Ω, —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ç–µ–º—É (message_thread_id).
    """
    message = get_queue_stats_message()
    if message is None:
        return
    try:
        if topic is not None:
            bot.send_message(chat_id, message, message_thread_id=topic)
        else:
            bot.send_message(chat_id, message)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {chat_id} —Å —Ç–æ–ø–∏–∫–æ–º {topic}: {e}")

def send_queue_stats_scheduled():
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –æ—á–µ—Ä–µ–¥–µ–π –≤ –¥–≤–∞ –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —á–∞—Ç–∞.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.
    """
    # –ó–∞–¥–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ chat_id
    chat_ids = [-1002559221974]
    message = get_queue_stats_message()
    if message is None:
        return
    for chat_id in chat_ids:
        try:
            bot.send_message(chat_id, message)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {chat_id}: {e}")

#—Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –æ—á–µ—Ä–µ–¥—è–º –¥–ª—è –æ–∫–∑
def get_queue_stats_okz_message():
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –æ—á–µ—Ä–µ–¥–µ–π –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏.
    """
    try:
        response = requests.get(f"{BACKEND_URL}/mn/queues/")
        response.raise_for_status()
        data = response.json()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –æ—á–µ—Ä–µ–¥–µ–π: {e}")
        return None

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    created = data.get("created_orders", {})
    assembly = data.get("assembly_orders", {})
    shooting = data.get("shooting_requests", {})
    retouch = data.get("retouch_queue", {})

    created_orders_count = created.get("orders_count", 0)
    created_products_count = created.get("products_count", 0)

    assembly_orders_count = assembly.get("orders_count", 0)
    assembly_products_count = assembly.get("products_count", 0)

    shooting_requests_count = shooting.get("requests_count", 0)
    shooting_products_count = shooting.get("products_count", 0)

    retouch_count = retouch.get("count", 0)

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤ –ø—Ä–µ–¥–ª–æ–≥–µ "–≤"
    def prepositional_form(count, singular, plural):
        """
        –î–ª—è —á–∏—Å–µ–ª, –æ–∫–∞–Ω—á–∏–≤–∞—é—â–∏—Ö—Å—è –Ω–∞ 1 (–Ω–æ –Ω–µ 11) –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–æ—Ä–º—É singular,
        –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö ‚Äì —Ñ–æ—Ä–º—É plural.
        """
        return singular if (count % 10 == 1 and count % 100 != 11) else plural

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å–∫–ª–æ–Ω–µ–Ω–∏—è–º–∏:
    message = (
        "–¢–µ–∫—É—â–∞—è –æ—á–µ—Ä–µ–¥—å –Ω–∞ –§–°:\n\n"
        f"üì© –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã (—Å–±–æ—Ä –µ—â–µ –Ω–µ –Ω–∞—á–∞—Ç) - {created_products_count} SKU –≤ {created_orders_count} {prepositional_form(created_orders_count, '–∑–∞–∫–∞–∑–µ', '–∑–∞–∫–∞–∑–∞—Ö')}\n"
        f"üì¶ –°–æ–±—Ä–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã (—Å–±–æ—Ä –Ω–∞—á–∞—Ç, –Ω–æ –µ—â–µ –Ω–µ –ø—Ä–∏–Ω—è—Ç—ã –Ω–∞ –§–°) - {assembly_products_count} SKU –≤ {assembly_orders_count} {prepositional_form(assembly_orders_count, '–∑–∞–∫–∞–∑–µ', '–∑–∞–∫–∞–∑–∞—Ö')}\n"
    )
    return message

def send_queue_stats_okz_scheduled():
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –æ—á–µ—Ä–µ–¥–µ–π –≤ –¥–≤–∞ –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —á–∞—Ç–∞ —Å –∂–µ—Å—Ç–∫–æ –∑–∞–¥–∞–Ω–Ω—ã–º–∏ —Ç–æ–ø–∏–∫–∞–º–∏:
    - –î–ª—è —á–∞—Ç–∞ -100123123123 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ø–∏–∫ 123
    - –î–ª—è —á–∞—Ç–∞ -100456456456 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ø–∏–∫ 456
    """
    message = get_queue_stats_okz_message()
    if message is None:
        return

    # –ñ–µ—Å—Ç–∫–æ –∑–∞–¥–∞–Ω–Ω—ã–µ –ø–∞—Ä—ã (chat_id, topic)
    chats = [
        (-1002453118841, 9)
    ]
    
    for chat_id, topic in chats:
        try:
            bot.send_message(chat_id, message, message_thread_id=topic)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {chat_id} —Å —Ç–æ–ø–∏–∫–æ–º {topic}: {e}")

#–°–±—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
def scheduled_order_status_refresh():
    """
    –ú–µ—Ç–æ–¥ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ —ç–Ω–¥–ø–æ–∏–Ω—Ç—É order-status-refresh,
    –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–¥–∞–Ω–Ω—ã–π —á–∞—Ç –∏ —Ç—Ä–µ–¥.
    """
    url = f"{BACKEND_URL}/auto/order-status-refresh/"
    try:
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()
    except Exception as e:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–∞—à —Å–ø–æ—Å–æ–± –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è)
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ {url}: {e}")
        return

    updated_orders = data.get("updated_orders")
    if updated_orders:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–æ–≤
        order_numbers = [
            str(order.get("OrderNumber"))
            for order in updated_orders
            if order.get("OrderNumber") is not None
        ]
        if order_numbers:
            orders_str = ", ".join(order_numbers)
            message_text = (
                f"–ó–∞–∫–∞–∑—ã {orders_str} –Ω–∞—Ö–æ–¥–∏–ª–∏—Å—å –≤ –°–±–æ—Ä–µ –¥–æ–ª–≥–æ–µ –≤—Ä–µ–º—è.\n\n"
                "–°—Ç–∞—Ç—É—Å—ã —ç—Ç–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã, –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è –∫–∞–∫ –Ω–æ–≤—ã–µ."
            )
            bot.send_message(
                chat_id=-1002453118841,
                text=message_text,
                message_thread_id=9
            )
    # scheduled

#–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ç–æ–≤–∞—Ä–æ–≤–µ–¥–∞–º - –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
def send_product_operations_stats():
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–æ–≤–∞—Ä–æ–≤–µ–¥–∞–º —Å –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞ –¥–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è,
    —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ —á–∞—Ç -1002213405207.

    –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:
    
    üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–æ–≤–∞—Ä–æ–≤–µ–¥–∞–º!*
    
    üìÖ *–°–µ–≥–æ–¥–Ω—è:*
    üë§ *–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤*:
      üì• –ü—Ä–∏–Ω—è—Ç–æ - <–∑–Ω–∞—á–µ–Ω–∏–µ>
      üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - <–∑–Ω–∞—á–µ–Ω–∏–µ>
      üßÆ –ò—Ç–æ–≥–æ - <–∑–Ω–∞—á–µ–Ω–∏–µ>
    üë§ *–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤*:
      üì• –ü—Ä–∏–Ω—è—Ç–æ - <–∑–Ω–∞—á–µ–Ω–∏–µ>
      üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - <–∑–Ω–∞—á–µ–Ω–∏–µ>
      üßÆ –ò—Ç–æ–≥–æ - <–∑–Ω–∞—á–µ–Ω–∏–µ>
    
    üóì *–° –Ω–∞—á–∞–ª–∞ –º–µ—Å—è—Ü–∞:*
    üë§ *–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤*:
      üì• –ü—Ä–∏–Ω—è—Ç–æ - <–∑–Ω–∞—á–µ–Ω–∏–µ>
      üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - <–∑–Ω–∞—á–µ–Ω–∏–µ>
      üßÆ –ò—Ç–æ–≥–æ - <–∑–Ω–∞—á–µ–Ω–∏–µ>
    –∏ —Ç.–¥.
    """
    from datetime import datetime

    today = datetime.now().date()
    first_day = today.replace(day=1)
    start_date_str = first_day.strftime('%d.%m.%Y')
    today_str = today.strftime('%d.%m.%Y')
    
    endpoint_url = f"{BACKEND_URL}/mn/product-operations-stats/"
    params = {
        "date_from": start_date_str,
        "date_to": today_str,
    }
    
    try:
        response = requests.get(endpoint_url, params=params)
        response.raise_for_status()
        data = response.json()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ç–æ–≤–∞—Ä–æ–≤–µ–¥–∞–º: {e}")
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –∏ –∑–∞ –≤–µ—Å—å –ø–µ—Ä–∏–æ–¥ (–∫–ª—é—á "–ò—Ç–æ–≥–æ")
    today_stats = data.get(today_str, {})
    month_stats = data.get("–ò—Ç–æ–≥–æ", {})

    message_lines = []
    message_lines.append("üìä *–°–¢–ê–¢–ò–°–¢–ò–ö–ê!*")
    message_lines.append("")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
    message_lines.append("üìÖ *–°–µ–≥–æ–¥–Ω—è:*")
    message_lines.append("")
    if today_stats:
        for user, stats in today_stats.items():
            accepted = stats.get("–ü—Ä–∏–Ω—è—Ç–æ", 0)
            sent = stats.get("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", 0)
            total = stats.get("–ò—Ç–æ–≥–æ", 0)
            message_lines.append(f"*{user}*:")
            message_lines.append(f"  üì• –ü—Ä–∏–Ω—è—Ç–æ - {accepted}")
            message_lines.append(f"  üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - {sent}")
            message_lines.append(f"  üßÆ –ò—Ç–æ–≥–æ - {total}")
    else:
        message_lines.append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è")
    
    message_lines.append("")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å –Ω–∞—á–∞–ª–∞ –º–µ—Å—è—Ü–∞
    message_lines.append("üóì *–° –Ω–∞—á–∞–ª–∞ –º–µ—Å—è—Ü–∞:*")
    message_lines.append("")
    if month_stats:
        for user, stats in month_stats.items():
            accepted = stats.get("–ü—Ä–∏–Ω—è—Ç–æ", 0)
            sent = stats.get("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", 0)
            total = stats.get("–ò—Ç–æ–≥–æ", 0)
            message_lines.append(f"*{user}*:")
            message_lines.append(f"  üì• –ü—Ä–∏–Ω—è—Ç–æ - {accepted}")
            message_lines.append(f"  üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - {sent}")
            message_lines.append(f"  üßÆ –ò—Ç–æ–≥–æ - {total}")
    else:
        message_lines.append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥–∞")
    
    message_text = "\n".join(message_lines)
    
    target_chat = "-1002213405207"
    
    try:
        bot.send_message(target_chat, message_text, parse_mode="Markdown")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ç–æ–≤–∞—Ä–æ–≤–µ–¥–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {target_chat}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

#–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∑–∞–≥—Ä—É–∑–∫–∞–º –≤ —Ç–µ–ª–µ–≥—Ä–∞–º —á–∞—Ç
def get_daily_moderation_stats_message():
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∑–∞ –°–ï–ì–û–î–ù–Ø —Å —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ Django
    –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        tuple: –ö–æ—Ä—Ç–µ–∂ (str: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–∞–Ω–Ω—ã—Ö, int: ID —á–∞—Ç–∞)
               –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç (None, None).
    """
    # ID —á–∞—Ç–∞ —Ç–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏
    TARGET_CHAT_ID = -1002513626060

    try:
        # 1. –ü–æ–ª—É—á–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É
        today_date_obj = date.today()
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç dd.mm.yyyy
        today_date_str = today_date_obj.strftime("%d.%m.%Y")

        # 2. –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è API –∑–∞–ø—Ä–æ—Å–∞
        api_url = f"{BACKEND_URL}/rd/senior_moderation_stats/{today_date_str}/{today_date_str}/"
        # print(f"–ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ URL: {api_url}") # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

        # 3. –í—ã–ø–æ–ª–Ω—è–µ–º GET –∑–∞–ø—Ä–æ—Å –∫ API
        response = requests.get(api_url, timeout=15) # –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞
        response.raise_for_status() # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏ HTTP (4xx, 5xx)

        # 4. –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç
        data = response.json()
        print(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {data}") # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

        # 5. –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        if today_date_str not in data:
            print(f"–í –æ—Ç–≤–µ—Ç–µ API –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ {today_date_str}.") # –ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å print –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏ ID —á–∞—Ç–∞
            return (f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∑–∞ {today_date_str}.", TARGET_CHAT_ID)

        moderator_stats = data[today_date_str]

        if not moderator_stats: # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –∑–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å
             print(f"–î–∞–Ω–Ω—ã–µ –ø–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –∑–∞ {today_date_str} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.") # –ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å print –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
             # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∑–∞–≥—Ä—É–∑–æ–∫ –∏ ID —á–∞—Ç–∞
             return (f"–ó–∞ —Å–µ–≥–æ–¥–Ω—è ({today_date_str}) –µ—â–µ –Ω–µ –±—ã–ª–æ –∑–∞–≥—Ä—É–∑–æ–∫.", TARGET_CHAT_ID)

        # 6. –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_lines = ["–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:"]
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ –∏–º–µ–Ω–∏ –¥–ª—è —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
        sorted_moderators = sorted(moderator_stats.items())

        for moderator_name, stats in sorted_moderators:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º .get —Å 0 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            uploaded_count = stats.get('Uploaded', 0)
            message_lines.append(f"{moderator_name} - {uploaded_count}")

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–æ—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ ID —á–∞—Ç–∞
        message_text = "\n".join(message_lines)

    

    except requests.exceptions.Timeout:
        print(f"–û—à–∏–±–∫–∞: –ó–∞–ø—Ä–æ—Å –∫ {api_url} –ø—Ä–µ–≤—ã—Å–∏–ª —Ç–∞–π–º–∞—É—Ç.") # –û—Å—Ç–∞–≤–ª—è–µ–º print –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        return (None, None) # –í–æ–∑–≤—Ä–∞—â–∞–µ–º None, None –ø—Ä–∏ –æ—à–∏–±–∫–µ
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: {e}")
        return (None, None)
    except ValueError as e: # –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ API (–Ω–µ JSON?): {e}")
        return (None, None)
    except Exception as e:
        # –õ–æ–≤–∏–º –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏
        print(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: {e}")
        return (None, None)

    if message_text:
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–∫—Ç 'bot', –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º ID —á–∞—Ç–∞, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –≤ –Ω–∞—á–∞–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º parse_mode="Markdown", –∫–∞–∫ –≤—ã —É–∫–∞–∑–∞–ª–∏
            bot.send_message(TARGET_CHAT_ID, message_text, parse_mode="Markdown")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {TARGET_CHAT_ID}")
        except Exception as e:
            # –õ–æ–≤–∏–º –ª—é–±—É—é –æ—à–∏–±–∫—É –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {TARGET_CHAT_ID}: {e}")
    else:
        # –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, –µ—Å–ª–∏ message_text –æ—Å—Ç–∞–ª—Å—è None
        # (—á—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –ø—Ä–∏ —Ç–µ–∫—É—â–µ–π –ª–æ–≥–∏–∫–µ, –Ω–æ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã)
        print("–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")

# –§–£–ù–ö–¶–ò–Ø –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞—è–≤–æ–∫
def send_daily_priority_strequests_notification():
    """
    –ü–æ–ª—É—á–∞–µ—Ç, —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ —Å—ä–µ–º–∫—É.
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.
    """
    # ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –∑–∞–ø—Ä–æ—Å–µ
    TARGET_CHAT_ID = -1002371513464 

    logging.info("–ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞—è–≤–∫–∞—Ö...")
    strequests_data = fetch_priority_strequests_data() # –§—É–Ω–∫—Ü–∏—è –∏–∑ photographers.py
    
    if strequests_data is None:
        logging.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞—è–≤–∫–∞—Ö. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –µ—Å–ª–∏ —ç—Ç–æ –∫—Ä–∏—Ç–∏—á–Ω–æ
        # bot.send_message(ADMIN_CHAT_ID, "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞—è–≤–æ–∫ ST.")
        return

    message_to_send = format_priority_strequests_message(strequests_data) # –§—É–Ω–∫—Ü–∏—è –∏–∑ photographers.py

    if message_to_send:
        try:
            bot.send_message(TARGET_CHAT_ID, message_to_send)
            logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞—è–≤–∫–∞—Ö —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {TARGET_CHAT_ID}")
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞—è–≤–∫–∞—Ö –≤ —á–∞—Ç {TARGET_CHAT_ID}: {e}")
    else:
        logging.info("–ù–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–µ–≥–æ–¥–Ω—è, –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –ø—É—Å—Ç—ã –ø–æ—Å–ª–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
