# stockman/tasks.py

from collections import defaultdict
from django.utils import timezone
from aiogram.utils.markdown import hbold
from asgiref.sync import async_to_sync
from django_q.tasks import async_task
from core.models import ProductOperation

def schedule_product_operations_stats():
    """
    –ó–∞–¥–∞—á–∞ –¥–ª—è —Å–±–æ—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –æ–ø–µ—Ä–∞—Ü–∏—è–º —Ç–æ–≤–∞—Ä–æ–≤–µ–¥–æ–≤.
    """
    print("–ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ schedule_product_operations_stats...")

    # 1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏
    now = timezone.now()
    start_of_month = now.replace(day=1, hour=0, minute=0, second=0, microsecond=0)

    # 2. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω—É–∂–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞ –º–µ—Å—è—Ü –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
    operations = ProductOperation.objects.filter(
        date__range=(start_of_month, now),
        operation_type__id__in=[3, 4]  # 3 - –ü—Ä–∏–Ω—è—Ç–æ, 4 - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
    ).select_related('user') # –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # 3. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Python, —á—Ç–æ–±—ã –Ω–µ –¥–µ–ª–∞—Ç—å –ª–∏—à–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ë–î
    today_stats = defaultdict(lambda: {'–ü—Ä–∏–Ω—è—Ç–æ': 0, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ': 0, '–ò—Ç–æ–≥–æ': 0})
    month_stats = defaultdict(lambda: {'–ü—Ä–∏–Ω—è—Ç–æ': 0, '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ': 0, '–ò—Ç–æ–≥–æ': 0})

    for op in operations:
        if not op.user:
            continue # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ –±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        username = f"{op.user.first_name} {op.user.last_name}".strip()
        if not username:
            username = op.user.username

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –º–µ—Å—è—Ü
        op_type_str = ''
        if op.operation_type_id == 3:
            op_type_str = '–ü—Ä–∏–Ω—è—Ç–æ'
        elif op.operation_type_id == 4:
            op_type_str = '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ'

        month_stats[username][op_type_str] += 1
        month_stats[username]['–ò—Ç–æ–≥–æ'] += 1

        # –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –±—ã–ª–∞ —Å–µ–≥–æ–¥–Ω—è, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        if op.date.date() == now.date():
            today_stats[username][op_type_str] += 1
            today_stats[username]['–ò—Ç–æ–≥–æ'] += 1

    # 4. –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
    message_lines = [hbold("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –¢–û–í–ê–†–û–í–ï–î–ê–ú!")]

    message_lines.append("\n" + hbold("üìÖ –°–µ–≥–æ–¥–Ω—è:"))
    if today_stats:
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ò—Ç–æ–≥–æ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
        sorted_today = sorted(today_stats.items(), key=lambda item: item[1]['–ò—Ç–æ–≥–æ'], reverse=True)
        for user, stats in sorted_today:
            message_lines.append(f"{hbold(user)}:")
            message_lines.append(f"  üì• –ü—Ä–∏–Ω—è—Ç–æ - {stats['–ü—Ä–∏–Ω—è—Ç–æ']}")
            message_lines.append(f"  üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - {stats['–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ']}")
            message_lines.append(f"  üßÆ –ò—Ç–æ–≥–æ - {stats['–ò—Ç–æ–≥–æ']}")
    else:
        message_lines.append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è")

    message_lines.append("\n" + hbold("üóì –° –Ω–∞—á–∞–ª–∞ –º–µ—Å—è—Ü–∞:"))
    if month_stats:
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ò—Ç–æ–≥–æ –∑–∞ –º–µ—Å—è—Ü
        sorted_month = sorted(month_stats.items(), key=lambda item: item[1]['–ò—Ç–æ–≥–æ'], reverse=True)
        for user, stats in sorted_month:
            message_lines.append(f"{hbold(user)}:")
            message_lines.append(f"  üì• –ü—Ä–∏–Ω—è—Ç–æ - {stats['–ü—Ä–∏–Ω—è—Ç–æ']}")
            message_lines.append(f"  üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - {stats['–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ']}")
            message_lines.append(f"  üßÆ –ò—Ç–æ–≥–æ - {stats['–ò—Ç–æ–≥–æ']}")
    else:
        message_lines.append("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥")

    message_text = "\n".join(message_lines)

    # 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–¥–∞–Ω–Ω—ã–π —á–∞—Ç
    target_chat_id = "-1002213405207" # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏

    print(f"–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤–µ–¥–æ–≤ –≤ —á–∞—Ç {target_chat_id}...")
    async_task(
        'telegram_bot.tasks.send_message_task', # –ü—É—Ç—å –∫ –Ω–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
        chat_id=target_chat_id,
        text=message_text
    )
    print("–ó–∞–¥–∞—á–∞ schedule_product_operations_stats –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
