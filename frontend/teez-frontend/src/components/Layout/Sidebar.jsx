// src/components/Sidebar.jsx
import React, { useState, useEffect, useMemo } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { Layout, Menu, Switch, Button, message, Typography, Spin, Space } from 'antd';
import {
  LoginOutlined,
  LogoutOutlined,
  DownOutlined,
  UserOutlined,
  MenuFoldOutlined,
  MenuUnfoldOutlined,
  CameraOutlined,
  SwapOutlined,
  InfoCircleOutlined
} from '@ant-design/icons';

// –£–î–ê–õ–ò–¢–ï –≠–¢–û–¢ –ò–ú–ü–û–†–¢, –µ—Å–ª–∏ API_BASE_URL –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ
// import { API_BASE_URL } from '../../utils/config'; 
import axiosInstance from '../../utils/axiosInstance'; // <-- –ò–ú–ü–û–†–¢ –û–ë–ù–û–í–õ–ï–ù–ù–û–ì–û AXIOS INSTANCE

const { Sider } = Layout;
const { Title, Text } = Typography;

const WORK_STATUS_RELEVANT_GROUPS = ['–§–æ—Ç–æ–≥—Ä–∞—Ñ', '–°—Ç–∞—Ä—à–∏–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ', '–†–µ—Ç—É—à–µ—Ä', '–°—Ç–∞—Ä—à–∏–π —Ä–µ—Ç—É—à–µ—Ä'];

const Sidebar = ({ darkMode, setDarkMode }) => {
  const [sidebarVisible, setSidebarVisible] = useState(true);
  const [user, setUser] = useState(null);
  const location = useLocation();

  const [onWorkStatus, setOnWorkStatus] = useState(null);
  const [isFetchingWorkStatus, setIsFetchingWorkStatus] = useState(false);
  const [isTogglingWorkStatus, setIsTogglingWorkStatus] = useState(false);
  const [currentOpenKeys, setCurrentOpenKeys] = useState([]);

  // ... (–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è menuItems –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
  const guestMenuItems = [
    { key: 'newreadyphotos2', label: <Link to="/ready-photos-2">–ì–æ—Ç–æ–≤—ã–µ —Ñ–æ—Ç–æ 2.0</Link> },
    { key: 'readyphotos', label: <Link to="/readyphotos">–ì–æ—Ç–æ–≤—ã–µ —Ñ–æ—Ç–æ 1.0</Link> },
    { key: 'nofoto', label: <Link to="/nofoto">–¢–æ–≤–∞—Ä—ã –±–µ–∑ —Ñ–æ—Ç–æ</Link> },
    { key: 'defect', label: <Link to="/defect">–ë—Ä–∞–∫–∏</Link> },
    { key: 'barcode-history', label: <Link to="/barcode-history">–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</Link> },
    { key: 'public-current-products', label: <Link to="/public-current-products">–¢–µ–∫—É—â–∏–µ —Ç–æ–≤–∞—Ä—ã –Ω–∞ –§–°</Link> },
    { key: 'public-orders', label: <Link to="/public-orders">–ó–∞–∫–∞–∑—ã –§–°</Link> },
    { key: 'public-invoice-list', label: <Link to="/public-invoice-list">–ù–∞–∫–ª–∞–¥–Ω—ã–µ –§–° (–û—Ç–ø—Ä–∞–≤–∫–∞)</Link> },
    { key: 'BarcodeCheckPage', label: <Link to="/BarcodeCheckPage">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –®–ö</Link> },
    { key: 'BarcodeCheckSeqPage', label: <Link to="/BarcodeCheckSeqPage">–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É</Link> },
  ];

  const tovarovedMenuItems = [
    { key: 'stockman-orders', label: <Link to="/stockman-orders">–ó–∞–∫–∞–∑—ã (–ü—Ä–∏–µ–º–∫–∞)</Link> },
    { key: 'stockman-strequest-list', label: <Link to="/stockman-strequest-list">–ó–∞—è–≤–∫–∏</Link> },
    { key: 'stockman-mark-defect', label: <Link to="/stockman-mark-defect">–ü–æ–º–µ—Ç–∏—Ç—å –±—Ä–∞–∫/–≤—Å–∫—Ä—ã—Ç–æ</Link> },
    { key: 'stockman-invoice-list', label: <Link to="/stockman-invoice-list">–ù–∞–∫–ª–∞–¥–Ω—ã–µ (–æ—Ç–ø—Ä–∞–≤–∫–∞)</Link> },
    { key: 'stockman-print-barcode', label: <Link to="/stockman-print-barcode">–ü–µ—á–∞—Ç—å —à—Ç—Ä–∏—Ö–∫–æ–¥–∞</Link> },
  ];

  const SeniorStockmanMenuItems = [
    { key: 'ProblematicProductsPage', label: <Link to="/ProblematicProductsPage">–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</Link> }
  ];

  const okzMenuItems = [
    { key: 'okz-orders', label: <Link to="/okz_list">–ó–∞–∫–∞–∑—ã –§–°</Link> },
    { key: 'OrderStats', label: <Link to="/OrderStats">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤</Link> }
  ];

  const ManagerMenuItems = [
    { key: 'manager-bulk-update-info', label: <Link to="/manager-bulk-update-info">–û–±–Ω–æ–≤–∏—Ç—å –ò–ù–§–û</Link> },
    { key: 'manager-allstats', label: <Link to="/manager-allstats">–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Link> },
    { key: 'ManagerSTRequestList', label: <Link to="/ManagerSTRequestList">–ó–∞—è–≤–∫–∏ –Ω–∞ —Å—ä–µ–º–∫—É</Link> },
    { key: 'ManagerRetouchRequestList', label: <Link to="/ManagerRetouchRequestList">–ó–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ—Ç—É—à—å</Link> },
    { key: 'AverageProcessingTimePage', label: <Link to="/AverageProcessingTimePage">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏</Link> }
  ];

  const RGTMenuItems = [
    { key: 'RejectedPhotosList', label: <Link to="/RejectedPhotosList">–ó–∞–±—Ä–∞—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ</Link> },
    { key: 'manager-create-order', label: <Link to="/manager-create-order">–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞</Link> },
    { key: 'manager-bulk-upload', label: <Link to="/manager-bulk-upload">–ó–∞–≥—Ä—É–∑–∏—Ç—å –®—Ç—Ä–∏—Ö–∫–æ–¥—ã</Link> },
    { key: 'ProblematicProductsPage', label: <Link to="/ProblematicProductsPage">–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</Link> },
    { key: 'ManagerStockmanStats', label: <Link to="/ManagerStockmanStats">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤–µ–¥–æ–≤</Link> },
    { key: 'AcceptanceDashboardPage', label: <Link to="/AcceptanceDashboardPage">–î—ç—à –ø–æ –ø—Ä–∏–µ–º–∫–µ</Link> },
  ];

  const RetoucherMenuItems = [
    { key: 'RetoucherRequestsListPage2', label: <Link to="/rt/RetoucherRequestsListPage/2">–ó–∞—è–≤–∫–∏ –≤ —Ä–µ—Ç—É—à–∏</Link> },
    { key: 'RetoucherRequestsListPage4', label: <Link to="/rt/RetoucherRequestsListPage/4">–ó–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–∞–≤–∫–∞—Ö</Link> },
    { type: 'divider', style: {borderTopWidth: '5px', marginTop: '5px', marginBottom: '5px' }, },
    { key: 'RetoucherRenderCheck', label: <Link to="/RetoucherRenderCheck">–û—Ç–±–æ—Ä –∏ —Ä–µ–Ω–¥–µ—Ä—ã</Link> },
    { key: 'RetoucherRenderEdit', label: <Link to="/RetoucherRenderEdit">–ü—Ä–∞–≤–∫–∏ –ø–æ —Ä–µ–Ω–¥–µ—Ä–∞–º</Link> },
  ];

  const SeniorRetoucherMenuItems = [
    { key: 'srt-create-requests', label: <Link to="/srt/CreateRetouchRequestsPage">üÜï–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫</Link> },
    { key: 'srt-list-1', label: <Link to="/srt/RetouchRequestsListPage/1">üÜï–°–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏</Link> },
    { key: 'srt-list-2', label: <Link to="/srt/RetouchRequestsListPage/2">üîÑ–ó–∞—è–≤–∫–∏ –≤ —Ä–µ—Ç—É—à–∏</Link> },
    { key: 'srt-list-3', label: <Link to="/srt/RetouchRequestsListPage/3">‚ñ∂Ô∏è–ó–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É</Link> },
    { key: 'srt-list-4', label: <Link to="/srt/RetouchRequestsListPage/4">üîÑ–ó–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–∞–≤–∫–∞—Ö</Link> },
    { key: 'srt-list-5', label: <Link to="/srt/RetouchRequestsListPage/5">–ì–æ—Ç–æ–≤—ã–µ –∑–∞—è–≤–∫–∏</Link> },
    { key: 'srt-stats', label: <Link to="/srt/RetoucherStatsPage">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Link> },
    { type: 'divider', style: {borderTopWidth: '5px', marginTop: '5px', marginBottom: '5px' }, },
    { key: 'SeniorRetoucherCheck', label: <Link to="/SeniorRetoucherCheck">–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–Ω–¥–µ—Ä–æ–≤</Link> },
    { key: 'SeniorRetoucherStats', label: <Link to="/SeniorRetoucherStats">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–Ω–¥–µ—Ä–æ–≤</Link> },
    { key: 'ModerationRejects', label: <Link to="/ModerationRejects">–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ —Ä–µ–Ω–¥–µ—Ä—ã</Link> }
  ];

  const RGOIMenuItems = [
    { key: 'SeniorRetoucherStats', label: <Link to="/SeniorRetoucherStats">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–Ω–¥–µ—Ä–æ–≤</Link> },
    { key: 'ModerationRejects', label: <Link to="/ModerationRejects">–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ —Ä–µ–Ω–¥–µ—Ä—ã</Link> },
    { key: 'AllRenders', label: <Link to="/AllRenders">–í—Å–µ —Ä–µ–Ω–¥–µ—Ä—ã</Link> },
  ];

  const ModeratorMenuItems = [
    { key: 'ModerationUpload', label: <Link to="/ModerationUpload">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–Ω–¥–µ—Ä–æ–≤</Link> },
    { key: 'ModerationStudioUpload', label: <Link to="/ModerationStudioUpload">–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ –æ—Ç –§–°</Link> },
    { key: 'MyUploadStats', label: <Link to="/MyUploadStats">–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Link> },
  ];

  const SeniorModeratorMenuItems = [
    { key: 'ModerationStats', label: <Link to="/ModerationStats">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–≥—Ä—É–∑–∫–∞–º</Link> }
  ];

  const seniorphotographerMenuItems = [
    { key: 'sph-created-st-requests', label: <Link to="/sph/created-st-requests">–°–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏</Link> },
    { key: 'sph-inprogress-st-requests', label: <Link to="/sph/inprogress-st-requests">–ó–∞—è–≤–∫–∏ –Ω–∞ —Å—ä–µ–º–∫–µ</Link> },
    { key: 'sph-filmed-st-requests', label: <Link to="/sph/filmed-st-requests">–û—Ç—Å–Ω—è—Ç—ã–µ –∑–∞—è–≤–∫–∏</Link> },
    { key: 'sph-NoPhotoPage', label: <Link to="/sph/NoPhotoPage">–ë–µ–∑ —Ñ–æ—Ç–æ</Link> },
    { key: 'sph-DailyStatsPage', label: <Link to="/sph/DailyStatsPage">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</Link> }
  ];


  useEffect(() => {
    const storedUser = localStorage.getItem('user');
    if (storedUser) {
      setUser(JSON.parse(storedUser));
    } else {
      // –ù–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–æ—Å—Ç—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–¥–µ—Å—å, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.
      // –õ–æ–≥–∏–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –∏–ª–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è "–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω" –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–∞
      // –∏–ª–∏ —É–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —Ä–æ—É—Ç—ã.
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage, –∏ —ç—Ç–æ –Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞,
      // axiosInstance –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å–∞–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç –Ω–∞ /login, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç.
    }
  }, []);

  // –£–¥–∞–ª—è–µ–º getAccessToken, —Ç–∞–∫ –∫–∞–∫ axiosInstance —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–∫–µ–Ω–∞–º–∏
  // const getAccessToken = () => localStorage.getItem('accessToken');

  useEffect(() => {
    const fetchInitialWorkStatus = async () => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–π –≥—Ä—É–ø–ø–µ
      const localUser = localStorage.getItem('user');
      if (!localUser || !JSON.parse(localUser).groups || !JSON.parse(localUser).groups.some(group => WORK_STATUS_RELEVANT_GROUPS.includes(group))) {
        setOnWorkStatus(null);
        return;
      }
      // –ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ç–æ–∫–µ–Ω –∑–¥–µ—Å—å, interceptor —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç

      setIsFetchingWorkStatus(true);
      try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º axiosInstance. –ó–∞–≥–æ–ª–æ–≤–∫–∏ Authorization –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
        const response = await axiosInstance.get(`/user/work-status/`);
        setOnWorkStatus(response.data.on_work);
      } catch (error) {
        // Interceptor —É–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å 401 (–æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–Ω—É—Ç—å –Ω–∞ /login)
        // –ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –æ—Ç API
        if (error.response && error.response.status !== 401) {
          message.error(error.response?.data?.detail || error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç—É—Å "–ù–∞ —Å–º–µ–Ω–µ".');
        } else if (!error.response) { // –û—à–∏–±–∫–∏ —Å–µ—Ç–∏ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –Ω–µ-HTTP –æ—à–∏–±–∫–∏
            message.error('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç—É—Å "–ù–∞ —Å–º–µ–Ω–µ".');
        }
        // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ 401 –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∏–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–µ–¥–∏—Ä–µ–∫—Ç), —ç—Ç–æ—Ç –±–ª–æ–∫ –º–æ–∂–µ—Ç –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è
        // –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
        setOnWorkStatus(null);
      } finally {
        setIsFetchingWorkStatus(false);
      }
    };

    // –í—ã–∑—ã–≤–∞–µ–º fetchInitialWorkStatus —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ user –∏–∑ localStorage —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const storedUser = localStorage.getItem('user');
    if (storedUser && JSON.parse(storedUser).id) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ id, —á—Ç–æ–±—ã –æ—Ç–ª–∏—á–∏—Ç—å –æ—Ç "–≥–æ—Å—Ç—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
        fetchInitialWorkStatus();
    } else if (!storedUser && location.pathname !== '/login') {
      // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º—ã –Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞, –≤–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É,
      // –∏–ª–∏ –ø–æ–ª–æ–∂–∏—Ç—å—Å—è –Ω–∞ —Ç–æ, —á—Ç–æ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —Ä–æ—É—Ç—ã –∏–ª–∏ –ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å API —á–µ—Ä–µ–∑ axiosInstance —Å–¥–µ–ª–∞—é—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç.
    }
  }, [location.pathname]); // –î–æ–±–∞–≤–ª—è–µ–º location.pathname –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, —á—Ç–æ–±—ã –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø—Ä–∏ —Å–º–µ–Ω–µ —Ä–æ—É—Ç–∞, –µ—Å–ª–∏ user –≤ localStorage –∏–∑–º–µ–Ω–∏–ª—Å—è

  const handleToggleWorkStatus = async () => {
    // –ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ç–æ–∫–µ–Ω –∑–¥–µ—Å—å
    setIsTogglingWorkStatus(true);
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º axiosInstance. –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
      const response = await axiosInstance.post(`/user/toggle-work-status/`);
      setOnWorkStatus(response.data.on_work);
      message.success(response.data.message || '–°—Ç–∞—Ç—É—Å "–ù–∞ —Å–º–µ–Ω–µ" —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
    } catch (error) {
      if (error.response && error.response.status !== 401) {
         message.error(error.response?.data?.detail || error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å.');
      } else if (!error.response) {
         message.error('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å.');
      }
      // –ï—Å–ª–∏ 401, interceptor —É–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã–ª —Å—Ä–∞–±–æ—Ç–∞—Ç—å.
    } finally {
      setIsTogglingWorkStatus(false);
    }
  };

  const toggleTheme = (checked) => {
    setDarkMode(checked);
    localStorage.setItem('appTheme', checked ? 'dark' : 'light'); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–º—É
  };
  
  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º—ã –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    const savedTheme = localStorage.getItem('appTheme');
    if (savedTheme) {
      setDarkMode(savedTheme === 'dark');
    }
  }, [setDarkMode]);


  const handleLoginLogout = () => {
    const localUserString = localStorage.getItem('user');
    const localUser = localUserString ? JSON.parse(localUserString) : null;
    const isGuest = !localUser || !localUser.id || (localUser.groups && localUser.groups.includes('–ì–æ—Å—Ç—å'));

    if (!isGuest) {
      // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—ç–∫–µ–Ω–¥ –¥–ª—è –∏–Ω–≤–∞–ª–∏–¥–∞—Ü–∏–∏ refresh —Ç–æ–∫–µ–Ω–∞
      // const currentRefreshToken = localStorage.getItem('refreshToken');
      // if (currentRefreshToken) {
      //   axiosInstance.post('/api/logout/', { refresh: currentRefreshToken }) // –ü—Ä–∏–º–µ—Ä —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
      //     .catch(err => console.error("Failed to logout on backend", err));
      // }

      localStorage.removeItem('accessToken');
      localStorage.removeItem('refreshToken');
      localStorage.removeItem('user');
      setUser(null); // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
      setOnWorkStatus(null);
      setCurrentOpenKeys([]); 
      message.success('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
      window.location.href = '/login'; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    } else {
      window.location.href = '/login';
    }
  };

  const menuItems = useMemo(() => {
    const currentLocalUser = localStorage.getItem('user');
    const userForMenu = currentLocalUser ? JSON.parse(currentLocalUser) : { groups: ['–ì–æ—Å—Ç—å'] };

    const items = [
      { key: 'main', icon: <UserOutlined />, label: <Link to="/">–ì–ª–∞–≤–Ω–∞—è</Link> },
      { key: 'guestDropdownBase', icon: <DownOutlined />, label: '–ì–æ—Å—Ç—å', children: guestMenuItems },
      { key: 'okzDropdownLimited', icon: <DownOutlined />, label: '–û–ö–ó (–¢–æ–ª—å–∫–æ –¥–ª—è –û–ö–ó)', children: okzMenuItems }
    ];
    if (userForMenu && userForMenu.groups) {
      if (userForMenu.groups.includes('–¢–æ–≤–∞—Ä–æ–≤–µ–¥')) { items.push({ key: 'tovDropdown', icon: <DownOutlined />, label: '–¢–æ–≤–∞—Ä–æ–≤–µ–¥', children: tovarovedMenuItems }); }
      if (userForMenu.groups.includes('–°—Ç–∞—Ä—à–∏–π —Ç–æ–≤–∞—Ä–æ–≤–µ–¥')) { items.push({ key: 'SeniorStockmanDropdown', icon: <DownOutlined />, label: '–°—Ç–∞—Ä—à–∏–π —Ç–æ–≤–∞—Ä–æ–≤–µ–¥', children: SeniorStockmanMenuItems }); }
      if (userForMenu.groups.includes('–ú–µ–Ω–µ–¥–∂–µ—Ä')) { items.push({ key: 'managerDropdown', icon: <DownOutlined />, label: '–ú–µ–Ω–µ–¥–∂–µ—Ä', children: ManagerMenuItems }); }
      if (userForMenu.groups.includes('–†–ì–¢')) { items.push({ key: 'RGTDropdown', icon: <DownOutlined />, label: '–†–ì–¢', children: RGTMenuItems }); }
      if (userForMenu.groups.includes('–†–µ—Ç—É—à–µ—Ä')) { items.push({ key: 'RetoucherDropdown', icon: <DownOutlined />, label: '–†–µ—Ç—É—à–µ—Ä', children: RetoucherMenuItems }); }
      if (userForMenu.groups.includes('–°—Ç–∞—Ä—à–∏–π —Ä–µ—Ç—É—à–µ—Ä')) { items.push({ key: 'SeniorRetoucherDropdown', icon: <DownOutlined />, label: '–°—Ç–∞—Ä—à–∏–π —Ä–µ—Ç—É—à–µ—Ä', children: SeniorRetoucherMenuItems }); }
      if (userForMenu.groups.includes('Moderator')) { items.push({ key: 'ModeratorDropdown', icon: <DownOutlined />, label: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', children: ModeratorMenuItems }); }
      if (userForMenu.groups.includes('SeniorModerator')) { items.push({ key: 'SeniorModeratorDropdown', icon: <DownOutlined />, label: '–°—Ç–∞—Ä—à–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä', children: SeniorModeratorMenuItems }); }
      if (userForMenu.groups.includes('–†–ì–û–ò')) { items.push({ key: 'RGOIDropdown', icon: <DownOutlined />, label: '–†–ì–û–ò', children: RGOIMenuItems }); }
      if (userForMenu.groups.includes('–°—Ç–∞—Ä—à–∏–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ')) { items.push({ key: 'seniorphotographerDropdown', icon: <CameraOutlined />, label: '–°—Ç–∞—Ä—à–∏–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ', children: seniorphotographerMenuItems }); }
    }
    return items;
  }, [location.pathname]); // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é –ø—Ä–∏ —Å–º–µ–Ω–µ user –∏–ª–∏ pathname (–∫–æ—Å–≤–µ–Ω–Ω–æ —á–µ—Ä–µ–∑ selectedKey -> determineOpenKeys)


  // –û–±–Ω–æ–≤–ª—è–µ–º user state –∏–∑ localStorage, —á—Ç–æ–±—ã UI —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞/–ª–æ–≥–∞—É—Ç–∞)
  useEffect(() => {
    const handleStorageChange = () => {
      const storedUser = localStorage.getItem('user');
      setUser(storedUser ? JSON.parse(storedUser) : null);
    };

    window.addEventListener('storage', handleStorageChange); // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage –∏–∑ –¥—Ä—É–≥–∏—Ö –≤–∫–ª–∞–¥–æ–∫
    handleStorageChange(); // –ü–µ—Ä–≤–∏—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞

    return () => {
      window.removeEventListener('storage', handleStorageChange);
    };
  }, []);


  const selectedKey = useMemo(() => {
    let key = 'main';
    const pathname = location.pathname;
    if (pathname.startsWith('/ready-photos-2')) { key = 'newreadyphotos2'; }
    else if (pathname.startsWith('/srt/CreateRetouchRequestsPage')) { key = 'srt-create-requests'; }
    else if (pathname.startsWith('/srt/RetouchRequestsListPage/1')) { key = 'srt-list-1'; }
    else if (pathname.startsWith('/srt/RetouchRequestsListPage/2')) { key = 'srt-list-2'; }
    else if (pathname.startsWith('/srt/RetouchRequestsListPage/3')) { key = 'srt-list-3'; }
    else if (pathname.startsWith('/srt/RetouchRequestsListPage/4')) { key = 'srt-list-4'; }
    else if (pathname.startsWith('/srt/RetouchRequestsListPage/5')) { key = 'srt-list-5'; }
    else if (pathname.startsWith('/srt/RetoucherStatsPage')) { key = 'srt-stats'; }
    else if (pathname.startsWith('/rt/RetoucherRequestsListPage/2') || pathname.startsWith('/rt/RetoucherRequestDetailPage')) { key = 'RetoucherRequestsListPage2'; }
    else if (pathname.startsWith('/rt/RetoucherRequestsListPage/4')) { key = 'RetoucherRequestsListPage4'; }
    else if (pathname.startsWith('/srt/RetouchRequestDetailPage')) { key = 'srt-list-2'; }
    else if (pathname.startsWith('/readyphotos')) { key = 'readyphotos'; }
    else if (pathname.startsWith('/nofoto')) { key = 'nofoto'; }
    else if (pathname.startsWith('/defect')) { key = 'defect'; }
    else if (pathname.startsWith('/barcode-history')) { key = 'barcode-history'; }
    else if (pathname.startsWith('/public-orders')) { key = 'public-orders'; }
    else if (pathname.startsWith('/public-order-detail')) { key = 'public-orders'; }
    else if (pathname.startsWith('/public-current-products')) { key = 'public-current-products'; }
    else if (pathname.startsWith('/BarcodeCheckPage')) { key = 'BarcodeCheckPage'; }
    else if (pathname.startsWith('/BarcodeCheckSeqPage')) { key = 'BarcodeCheckSeqPage'; }
    else if (pathname.startsWith('/stockman-orders')) { key = 'stockman-orders'; }
    else if (pathname.startsWith('/stockman-order-detail/')) { key = 'stockman-orders'; }
    else if (pathname.startsWith('/stockman-strequest-list')) { key = 'stockman-strequest-list'; }
    else if (pathname.startsWith('/stockman-strequest-detail')) { key = 'stockman-strequest-list'; }
    else if (pathname.startsWith('/stockman-invoice-list')) { key = 'stockman-invoice-list'; }
    else if (pathname.startsWith('/stockman-invoice-detail')) { key = 'stockman-invoice-list'; }
    else if (pathname.startsWith('/stockman-mark-defect')) { key = 'stockman-mark-defect'; }
    else if (pathname.startsWith('/stockman-print-barcode')) { key = 'stockman-print-barcode'; }
    else if (pathname.startsWith('/okz_list') || pathname.startsWith('/okz_orders')) { key = 'okz-orders'; }
    else if (pathname.startsWith('/OrderStats') || pathname.startsWith('/OrderStats')) { key = 'OrderStats'; }
    else if (pathname.startsWith('/public-invoice-list') || pathname.startsWith('/public-invoice-detail')) { key = 'public-invoice-list'; }
    else if (pathname.startsWith('/ProblematicProductsPage')) { key = 'ProblematicProductsPage'; }
    else if (pathname.startsWith('/manager-create-order')) { key = 'manager-create-order'; }
    else if (pathname.startsWith('/manager-bulk-upload')) { key = 'manager-bulk-upload'; }
    else if (pathname.startsWith('/manager-bulk-update-info')) { key = 'manager-bulk-update-info'; }
    else if (pathname.startsWith('/RejectedPhotosList')) { key = 'RejectedPhotosList'; }
    else if (pathname.startsWith('/manager-allstats')) { key = 'manager-allstats'; }
    else if (pathname.startsWith('/ManagerSTRequestList') || pathname.startsWith('/ManagerSTRequestDetail')) { key = 'ManagerSTRequestList'; }
    else if (pathname.startsWith('/ManagerRetouchRequestList') || pathname.startsWith('/ManagerRetouchRequestDetail')) { key = 'ManagerRetouchRequestList'; }
    else if (pathname.startsWith('/ManagerStockmanStats')) { key = 'ManagerStockmanStats'; }
    else if (pathname.startsWith('/AverageProcessingTimePage')) { key = 'AverageProcessingTimePage'; }
    else if (pathname.startsWith('/AllRenders')) { key = 'AllRenders'; }
    else if (pathname.startsWith('/AcceptanceDashboardPage')) { key = 'AcceptanceDashboardPage'; }
    else if (pathname.startsWith('/RetoucherRenderCheck')) { key = 'RetoucherRenderCheck'; }
    else if (pathname.startsWith('/RetoucherRenderEdit')) { key = 'RetoucherRenderEdit'; }
    else if (pathname.startsWith('/SeniorRetoucherCheck')) { key = 'SeniorRetoucherCheck'; }
    else if (pathname.startsWith('/SeniorRetoucherStats')) { key = 'SeniorRetoucherStats'; }
    else if (pathname.startsWith('/ModerationRejects')) { key = 'ModerationRejects'; }
    else if (pathname.startsWith('/ModerationUpload')) { key = 'ModerationUpload'; }
    else if (pathname.startsWith('/ModerationStudioUpload')) { key = 'ModerationStudioUpload'; }
    else if (pathname.startsWith('/MyUploadStats')) { key = 'MyUploadStats'; }
    else if (pathname.startsWith('/ModerationStats')) { key = 'ModerationStats'; }
    else if (pathname.startsWith('/sph/created-st-requests') || pathname.startsWith('/sph/st-request-detail/')) { key = 'sph-created-st-requests'; }
    else if (pathname.startsWith('/sph/inprogress-st-requests')) { key = 'sph-inprogress-st-requests'; }
    else if (pathname.startsWith('/sph/filmed-st-requests')) { key = 'sph-filmed-st-requests'; }
    else if (pathname.startsWith('/sph/NoPhotoPage')) { key = 'sph-NoPhotoPage'; }
    else if (pathname.startsWith('/sph/DailyStatsPage')) { key = 'sph-DailyStatsPage'; }
    return key;
  }, [location.pathname]);

  useEffect(() => {
    const currentLocalUser = localStorage.getItem('user');
    const userForMenu = currentLocalUser ? JSON.parse(currentLocalUser) : { groups: ['–ì–æ—Å—Ç—å'] };

    const determineOpenKeys = () => {
      const keysToOpen = [];
      if (selectedKey && selectedKey !== 'main' && menuItems && menuItems.length > 0) {
        for (const menuItem of menuItems) { // –ò—Å–ø–æ–ª—å–∑—É–µ–º menuItems, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∑–∞–≤–∏—Å—è—Ç –æ—Ç userForMenu
          if (menuItem.children && menuItem.children.some(child => child.key === selectedKey)) {
            if (!keysToOpen.includes(menuItem.key)) {
              keysToOpen.push(menuItem.key);
            }
          }
        }
        // –õ–æ–≥–∏–∫–∞ –¥–ª—è ProblematicProductsPage –∏ –¥—Ä—É–≥–∏—Ö –æ–±—â–∏—Ö –∫–ª—é—á–µ–π
        if (selectedKey === 'ProblematicProductsPage' && userForMenu && userForMenu.groups) {
          if (userForMenu.groups.includes('–°—Ç–∞—Ä—à–∏–π —Ç–æ–≤–∞—Ä–æ–≤–µ–¥') && menuItems.find(m => m.key === 'SeniorStockmanDropdown')) {
            if (!keysToOpen.includes('SeniorStockmanDropdown')) keysToOpen.push('SeniorStockmanDropdown');
          }
          if (userForMenu.groups.includes('–†–ì–¢') && menuItems.find(m => m.key === 'RGTDropdown')) {
            if (!keysToOpen.includes('RGTDropdown')) keysToOpen.push('RGTDropdown');
          }
        }
        if (selectedKey === 'SeniorRetoucherStats' && userForMenu && userForMenu.groups) {
           if (userForMenu.groups.includes('–°—Ç–∞—Ä—à–∏–π —Ä–µ—Ç—É—à–µ—Ä') && menuItems.find(m => m.key === 'SeniorRetoucherDropdown')) {
              if (!keysToOpen.includes('SeniorRetoucherDropdown')) keysToOpen.push('SeniorRetoucherDropdown');
          }
          if (userForMenu.groups.includes('–†–ì–û–ò') && menuItems.find(m => m.key === 'RGOIDropdown')) {
              if (!keysToOpen.includes('RGOIDropdown')) keysToOpen.push('RGOIDropdown');
          }
        }
        if (selectedKey === 'ModerationRejects' && userForMenu && userForMenu.groups) {
           if (userForMenu.groups.includes('–°—Ç–∞—Ä—à–∏–π —Ä–µ—Ç—É—à–µ—Ä') && menuItems.find(m => m.key === 'SeniorRetoucherDropdown')) {
              if (!keysToOpen.includes('SeniorRetoucherDropdown')) keysToOpen.push('SeniorRetoucherDropdown');
          }
          if (userForMenu.groups.includes('–†–ì–û–ò') && menuItems.find(m => m.key === 'RGOIDropdown')) {
              if (!keysToOpen.includes('RGOIDropdown')) keysToOpen.push('RGOIDropdown');
          }
        }
      }
      setCurrentOpenKeys(keysToOpen.length > 0 ? [...new Set(keysToOpen)] : []);
    };
    determineOpenKeys();
  }, [selectedKey, menuItems]); // menuItems —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç user (–∫–æ—Å–≤–µ–Ω–Ω–æ –æ—Ç localStorage)

  const showWorkStatusSection = user && user.groups && user.groups.some(group => WORK_STATUS_RELEVANT_GROUPS.includes(group));
  const isUserTrulyLoggedIn = user && user.id && user.groups && !user.groups.includes('–ì–æ—Å—Ç—å');


  return (
    <>
      {sidebarVisible && (
        <Sider
          width={250}
          style={{ minHeight: '100vh', backgroundColor: darkMode ? '#001529' : '#fff', display: 'flex', flexDirection: 'column' }}
          breakpoint="lg" // –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫—Ä—ã—Ç–∏—è –Ω–∞ –º–∞–ª—ã—Ö —ç–∫—Ä–∞–Ω–∞—Ö
          collapsedWidth="0" // –ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–∫—Ä—ã–≤–∞—Ç—å –ø—Ä–∏ —Å—Ö–ª–æ–ø—ã–≤–∞–Ω–∏–∏
          onBreakpoint={broken => { // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤–∏–¥–∏–º–æ—Å—Ç–∏
             if (broken) setSidebarVisible(false);
          }}
          trigger={null} // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä, —Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å —Å–≤–æ—è –∫–Ω–æ–ø–∫–∞
          collapsible
          collapsed={!sidebarVisible} // –£–ø—Ä–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º collapsed
        >
          <div style={{ flexShrink: 0 }}> {/* –®–∞–ø–∫–∞ —Å–∞–π–¥–±–∞—Ä–∞ */}
            <div style={{ textAlign: 'center', margin: '16px 0' }}>
              <Title level={2} style={{ margin: 0, color: '#90ee90' }}>Teez Studio 3.0</Title>
            </div>
            <div style={{ textAlign: 'center', marginBottom: 16, padding: '0 16px' }}>
              <Switch
                checked={darkMode}
                onChange={toggleTheme}
                checkedChildren="Dark"
                unCheckedChildren="Light"
                style={{ width: 'auto' }}
              />
            </div>
            {showWorkStatusSection && (
              <div style={{ padding: '0 16px 16px 16px', borderBottom: `1px solid ${darkMode ? 'rgba(255, 255, 255, 0.12)' : '#f0f0f0'}`, marginBottom: 8 }}>
                <Title level={5} style={{ marginBottom: 8, color: darkMode ? 'rgba(255,255,255,0.85)' : 'rgba(0,0,0,0.85)' }}>
                  –°—Ç–∞—Ç—É—Å —Å–º–µ–Ω—ã
                </Title>
                {isFetchingWorkStatus ? (
                  <div style={{ textAlign: 'center' }}> <Spin size="small" /> <Text type="secondary"> –ó–∞–≥—Ä—É–∑–∫–∞...</Text> </div>
                ) : onWorkStatus !== null ? (
                  <Space direction="vertical" style={{ width: '100%' }}>
                    <Text style={{ color: darkMode ? 'rgba(255,255,255,0.75)' : 'rgba(0,0,0,0.75)' }}>
                      <InfoCircleOutlined style={{ marginRight: 8, color: onWorkStatus ? '#52c41a' : '#faad14' }} />
                      {onWorkStatus ? '–ù–∞ —Å–º–µ–Ω–µ' : '–ù–µ –Ω–∞ —Å–º–µ–Ω–µ'}
                    </Text>
                    <Button
                      type="default"
                      icon={<SwapOutlined />}
                      block
                      onClick={handleToggleWorkStatus}
                      loading={isTogglingWorkStatus}
                      size="small"
                    >
                      –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å
                    </Button>
                  </Space>
                ) : (
                  <Text type="secondary" style={{ display: 'block', textAlign: 'center' }}>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç—É—Å</Text>
                )}
              </div>
            )}
          </div>
          
          <div style={{ flexGrow: 1, overflowY: 'auto', overflowX: 'hidden' }}> {/* –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é */}
            <Menu
              selectedKeys={[selectedKey]}
              openKeys={currentOpenKeys}
              onOpenChange={setCurrentOpenKeys}
              mode="inline"
              theme={darkMode ? 'dark' : 'light'}
              items={menuItems} // menuItems —Ç–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ useEffect -> handleStorageChange -> setUser -> useMemo
              style={{ borderRight: 0 }}
            />
          </div>

          <div style={{ padding: 16, borderTop: `1px solid ${darkMode ? 'rgba(255, 255, 255, 0.12)' : '#f0f0f0'}`, flexShrink: 0 }}> {/* –§—É—Ç–µ—Ä —Å–∞–π–¥–±–∞—Ä–∞ */}
            {user && user.id ? ( // –ü—Ä–æ–≤–µ—Ä—è–µ–º user.id –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∏ –∫–Ω–æ–ø–∫–∏ –≤—ã—Ö–æ–¥–∞
              <>
                <div style={{ marginBottom: 8, color: darkMode ? '#fff' : '#000', textAlign: 'center', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>
                  {user.first_name} {user.last_name}
                </div>
                <Button
                  type="primary"
                  danger={isUserTrulyLoggedIn} // –ö–Ω–æ–ø–∫–∞ –∫—Ä–∞—Å–Ω–∞—è –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–æ—à–µ–ª (–Ω–µ –≥–æ—Å—Ç—å)
                  block
                  onClick={handleLoginLogout}
                  icon={isUserTrulyLoggedIn ? <LogoutOutlined /> : <LoginOutlined />}
                >
                  {isUserTrulyLoggedIn ? '–í—ã–π—Ç–∏' : '–í–æ–π—Ç–∏'}
                </Button>
              </>
            ) : ( 
              <Button type="primary" block onClick={handleLoginLogout} icon={<LoginOutlined />}>
                –í–æ–π—Ç–∏
              </Button>
            )}
          </div>
        </Sider>
      )}
      <Button
        onClick={() => setSidebarVisible(!sidebarVisible)}
        style={{
          position: 'fixed',
          bottom: 20,
          left: sidebarVisible ? 250 + 10 : 10, // –ù–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø –æ—Ç –∫—Ä–∞—è —Å–∞–π–¥–±–∞—Ä–∞ –∏–ª–∏ —ç–∫—Ä–∞–Ω–∞
          zIndex: 1000, // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ zIndex –≤—ã—à–µ –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ–º
          transition: 'left 0.2s ease-in-out',
        }}
        type="primary"
        shape="circle"
        icon={sidebarVisible ? <MenuFoldOutlined /> : <MenuUnfoldOutlined />}
        size="large"
      />
    </>
  );
};

export default Sidebar;